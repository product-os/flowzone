# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
name: "Test custom"
description: "Custom test step to run during a pull request"
# this inputs are always provided by flowzone, so they must always be defined on the composite action
inputs:
  json:
    description: "JSON stringified object containing all the inputs from the calling workflow"
    required: true
  secrets:
    description: "JSON stringified object containing all the secrets from the calling workflow"
    required: true
  variables:
    description: "JSON stringified object containing all the variables from the calling workflow"
    required: true
runs:
  using: "composite"
  steps:
    - name: Dump context
      shell: bash
      env:
        GITHUB: ${{ toJSON(github) }}
        INPUTS: ${{ inputs.json }}
        VARIABLES: ${{ toJSON(inputs.variables) }}
      run: |
        echo "${GITHUB}"
        echo "${INPUTS}"
        echo "${VARIABLES}"
        echo "matrix_value=${matrix_value}"
        echo "os_value=${os_value}"

    - name: Check vars from environment
      shell: bash
      run: |
        echo "environment=${environment}"
        echo "FLOWZONE_TEST_VAR=${{ fromJSON(inputs.variables).FLOWZONE_TEST_VAR }}"
        echo "FLOWZONE_TEST_SECRET=${{ fromJSON(inputs.secrets).FLOWZONE_TEST_SECRET }}"
        test "${{ fromJSON(inputs.variables).FLOWZONE_TEST_VAR }}" = "Flowzone says hi!"

    # Resolve tag, semver, sha, and description of current git working copy.
    - name: Describe git state
      id: git_describe
      shell: bash
      run: |
        set -x
        tag="$(git tag --points-at HEAD | tail -n1)"

        npx -q -y -- semver -c -l "${tag}"
        git describe --tags --always --dirty | cat
        git rev-parse HEAD
        git submodule
        git --no-pager tag --list --sort=-version:refname "v*.*.*" --merged

    # https://github.com/actions/runner-images/discussions/7191#discussioncomment-8351370
    # https://github.com/reactivecircus/android-emulator-runner?tab=readme-ov-file#running-hardware-accelerated-emulators-on-linux-runners
    # https://github.com/ankidroid/Anki-Android/commit/3a5ecaa9837691817022d11b0dbe383b8e82d9fe
    # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
    - name: Check KVM permissions
      shell: bash
      if: runner.os == 'Linux' && runner.arch == 'X64'
      continue-on-error: true
      run: |
        set -x

        if ! command -v kvm-ok > /dev/null 2>&1
        then
          sudo apt-get update
          sudo apt-get install -y cpu-checker
        fi

        if ! kvm-ok
        then
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger -v --name-match=kvm
        fi

        kvm-ok
