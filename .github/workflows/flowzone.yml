on:
  workflow_call:
    secrets:
      COMPOSE_VARS:
        required: false
    inputs:
      working_directory:
        description: 'Github actions working directory'
        type: string
        required: false
        default: '.'

jobs:
  check_type:
    name: Check Project Type
    runs-on: 'ubuntu-latest'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    # Declare outputs for next jobs
    outputs:
      type: ${{ steps.check_type.outputs.type }}
      sut: ${{ steps.check_type.outputs.sut }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Checkout as many commits as needed for the check
          fetch-depth: 1
      - shell: bash
        id: check_type
        run: |
          if test -f "package.json"; then
            echo "found package.json"
            echo ::set-output name=type::"nodejs"
          elif test -f Dockerfile || test -f Dockerfile.template || test -f docker-compose.yml ] ; then
            echo "found Docker and/or compose file(s)"
            echo ::set-output name=type::"docker"
          else
            echo ::set-output name=type::"generic"
          fi

          if [ -f docker-compose.test.yml ] && [ -f docker-compose.yml ]; then
            echo "found docker-compose.test.yml"
            echo ::set-output name=sut::"True"
          else
            echo ::set-output name=sut::"False"
          fi

  versionbot:
    name: VersionBot
    needs: [check_type]
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.versionbot.outputs.new_version }}
      commit_sha: ${{ steps.versionbot.outputs.commit_sha }}
      commit_long_sha: ${{ steps.versionbot.outputs.commit_long_sha }}
      versioned_branch: ${{ steps.versionbot.outputs.versioned_branch }}

    steps:
      - id: versionbot
        uses: ./.github/actions/versionbot
        with:
          working_directory: .
          repo_type: ${{ needs.check_type.outputs.type }}

  npm_test:
    name: Test NodeJS 16.x
    runs-on: ubuntu-latest
    needs: [check_type, versionbot]
    if: needs.check_type.outputs.type == 'nodejs'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.versionbot.outputs.commit_sha }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: |
          if [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
      - run: npm run build --if-present
      - run: npm test

  sut_test:
    name: Test with docker compose
    runs-on: ubuntu-latest
    needs: [check_type, versionbot]
    if: needs.check_type.outputs.sut == 'True'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    env:
      COMPOSE_VARS: ${{ secrets.COMPOSE_VARS }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.versionbot.outputs.commit_sha }}

      - name: Run SUT container
        shell: bash
        run: |
          if [[ ! -z "${COMPOSE_VARS}" ]]; then
            echo $COMPOSE_VARS | base64 --decode > .env
          fi
          docker-compose \
          -f docker-compose.yml \
          -f docker-compose.test.yml \
          up \
          --exit-code-from "sut"
