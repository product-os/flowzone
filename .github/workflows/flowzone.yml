on:
  workflow_call:
    secrets:
      COMPOSE_VARS:
        required: false
    inputs:
      working_directory:
        description: 'Github actions working directory'
        type: string
        required: false
        default: '.'

jobs:
  check_type:
    name: Check Project Type
    runs-on: 'ubuntu-latest'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    # Declare outputs for next jobs
    outputs:
      npm: ${{ steps.check_type.outputs.npm }}
      sut: ${{ steps.check_type.outputs.sut }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Checkout as many commits as needed for the check
          fetch-depth: 1
      - shell: bash
        id: check_type
        run: |
          if test -f "package.json"; then
            echo "found package.json"
            echo ::set-output name=npm::"True"
          else
            echo ::set-output name=npm::"False"
          fi

          if [ -f docker-compose.test.yml ] && [ -f docker-compose.yml ]; then
            echo "found docker-compose.test.yml"
            echo ::set-output name=sut::"True"
          else
            echo ::set-output name=sut::"False"
          fi

  versionbot:
    name: VersionBot
    runs-on: ubuntu-latest
    # only run on PR merges to the default branch
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref_name == github.event.repository.default_branch }}

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    outputs:
      version: ${{ steps.versionbot.outputs.version }}
      updated: ${{ steps.versionbot.outputs.updated }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run VersionBot
        id: versionbot
        uses: ./.github/actions/versionbot
        with:
          # use the default GITHUB_TOKEN for now to avoid triggering subsequent actions
          # TODO: replace this with a service account token and add exceptions to the actions to avoid running again
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          branch: '${{ github.event.repository.default_branch }}'

  npm_test:
    name: Test NodeJS 16.x
    runs-on: ubuntu-latest
    needs: [check_type]
    if: needs.check_type.outputs.npm == 'True'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: |
          if [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
      - run: npm run build --if-present
      - run: npm test

  sut_test:
    name: Test with docker compose
    runs-on: ubuntu-latest
    needs: [check_type]
    if: needs.check_type.outputs.sut == 'True'

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    env:
      COMPOSE_VARS: ${{ secrets.COMPOSE_VARS }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Run SUT container
        shell: bash
        run: |
          if [[ ! -z "${COMPOSE_VARS}" ]]; then
            echo $COMPOSE_VARS | base64 --decode > .env
          fi
          docker-compose \
          -f docker-compose.yml \
          -f docker-compose.test.yml \
          up \
          --exit-code-from "sut"
